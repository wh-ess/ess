#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ESS.Domain.POP.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ESS_ERP")]
	public partial class ESS_POSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertTemplateBody(TemplateBody instance);
    partial void UpdateTemplateBody(TemplateBody instance);
    partial void DeleteTemplateBody(TemplateBody instance);
    partial void InsertEmptyTemplate(EmptyTemplate instance);
    partial void UpdateEmptyTemplate(EmptyTemplate instance);
    partial void DeleteEmptyTemplate(EmptyTemplate instance);
    partial void InsertTemplateHead(TemplateHead instance);
    partial void UpdateTemplateHead(TemplateHead instance);
    partial void DeleteTemplateHead(TemplateHead instance);
    #endregion
		
		public ESS_POSDataContext() : 
				base(global::ESS.Domain.POP.Properties.Settings.Default.ESS_ERPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ESS_POSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ESS_POSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ESS_POSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ESS_POSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TemplateBody> TemplateBody
		{
			get
			{
				return this.GetTable<TemplateBody>();
			}
		}
		
		public System.Data.Linq.Table<EmptyTemplate> EmptyTemplate
		{
			get
			{
				return this.GetTable<EmptyTemplate>();
			}
		}
		
		public System.Data.Linq.Table<TemplateHead> TemplateHead
		{
			get
			{
				return this.GetTable<TemplateHead>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Pop.TemplateBody")]
	public partial class TemplateBody : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Guid;
		
		private string _Name;
		
		private string _FontName;
		
		private int _FontSize;
		
		private string _FontStyle;
		
		private string _FontColor;
		
		private int _XPosition;
		
		private int _YPosition;
		
		private string _NewFilePath;
		
		private string _OldFilePath;
		
		private string _FontAlignment;
		
		private int _Seq;
		
		private System.Guid _HeadGuid;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFontNameChanging(string value);
    partial void OnFontNameChanged();
    partial void OnFontSizeChanging(int value);
    partial void OnFontSizeChanged();
    partial void OnFontStyleChanging(string value);
    partial void OnFontStyleChanged();
    partial void OnFontColorChanging(string value);
    partial void OnFontColorChanged();
    partial void OnXPositionChanging(int value);
    partial void OnXPositionChanged();
    partial void OnYPositionChanging(int value);
    partial void OnYPositionChanged();
    partial void OnNewFilePathChanging(string value);
    partial void OnNewFilePathChanged();
    partial void OnOldFilePathChanging(string value);
    partial void OnOldFilePathChanged();
    partial void OnFontAlignmentChanging(string value);
    partial void OnFontAlignmentChanged();
    partial void OnSeqChanging(int value);
    partial void OnSeqChanged();
    partial void OnHeadGuidChanging(System.Guid value);
    partial void OnHeadGuidChanged();
    #endregion
		
		public TemplateBody()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FontName
		{
			get
			{
				return this._FontName;
			}
			set
			{
				if ((this._FontName != value))
				{
					this.OnFontNameChanging(value);
					this.SendPropertyChanging();
					this._FontName = value;
					this.SendPropertyChanged("FontName");
					this.OnFontNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontSize", DbType="Int NOT NULL")]
		public int FontSize
		{
			get
			{
				return this._FontSize;
			}
			set
			{
				if ((this._FontSize != value))
				{
					this.OnFontSizeChanging(value);
					this.SendPropertyChanging();
					this._FontSize = value;
					this.SendPropertyChanged("FontSize");
					this.OnFontSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontStyle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FontStyle
		{
			get
			{
				return this._FontStyle;
			}
			set
			{
				if ((this._FontStyle != value))
				{
					this.OnFontStyleChanging(value);
					this.SendPropertyChanging();
					this._FontStyle = value;
					this.SendPropertyChanged("FontStyle");
					this.OnFontStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontColor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FontColor
		{
			get
			{
				return this._FontColor;
			}
			set
			{
				if ((this._FontColor != value))
				{
					this.OnFontColorChanging(value);
					this.SendPropertyChanging();
					this._FontColor = value;
					this.SendPropertyChanged("FontColor");
					this.OnFontColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XPosition", DbType="Int NOT NULL")]
		public int XPosition
		{
			get
			{
				return this._XPosition;
			}
			set
			{
				if ((this._XPosition != value))
				{
					this.OnXPositionChanging(value);
					this.SendPropertyChanging();
					this._XPosition = value;
					this.SendPropertyChanged("XPosition");
					this.OnXPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YPosition", DbType="Int NOT NULL")]
		public int YPosition
		{
			get
			{
				return this._YPosition;
			}
			set
			{
				if ((this._YPosition != value))
				{
					this.OnYPositionChanging(value);
					this.SendPropertyChanging();
					this._YPosition = value;
					this.SendPropertyChanged("YPosition");
					this.OnYPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewFilePath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NewFilePath
		{
			get
			{
				return this._NewFilePath;
			}
			set
			{
				if ((this._NewFilePath != value))
				{
					this.OnNewFilePathChanging(value);
					this.SendPropertyChanging();
					this._NewFilePath = value;
					this.SendPropertyChanged("NewFilePath");
					this.OnNewFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldFilePath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OldFilePath
		{
			get
			{
				return this._OldFilePath;
			}
			set
			{
				if ((this._OldFilePath != value))
				{
					this.OnOldFilePathChanging(value);
					this.SendPropertyChanging();
					this._OldFilePath = value;
					this.SendPropertyChanged("OldFilePath");
					this.OnOldFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontAlignment", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FontAlignment
		{
			get
			{
				return this._FontAlignment;
			}
			set
			{
				if ((this._FontAlignment != value))
				{
					this.OnFontAlignmentChanging(value);
					this.SendPropertyChanging();
					this._FontAlignment = value;
					this.SendPropertyChanged("FontAlignment");
					this.OnFontAlignmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int NOT NULL")]
		public int Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid HeadGuid
		{
			get
			{
				return this._HeadGuid;
			}
			set
			{
				if ((this._HeadGuid != value))
				{
					this.OnHeadGuidChanging(value);
					this.SendPropertyChanging();
					this._HeadGuid = value;
					this.SendPropertyChanged("HeadGuid");
					this.OnHeadGuidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Pop.EmptyTemplate")]
	public partial class EmptyTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Guid;
		
		private string _Name;
		
		private string _ImageFileDir;
		
		private string _ImageFileName;
		
		private int _Seq;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _IsEnable;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageFileDirChanging(string value);
    partial void OnImageFileDirChanged();
    partial void OnImageFileNameChanging(string value);
    partial void OnImageFileNameChanged();
    partial void OnSeqChanging(int value);
    partial void OnSeqChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnIsEnableChanging(int value);
    partial void OnIsEnableChanged();
    #endregion
		
		public EmptyTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFileDir", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ImageFileDir
		{
			get
			{
				return this._ImageFileDir;
			}
			set
			{
				if ((this._ImageFileDir != value))
				{
					this.OnImageFileDirChanging(value);
					this.SendPropertyChanging();
					this._ImageFileDir = value;
					this.SendPropertyChanged("ImageFileDir");
					this.OnImageFileDirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFileName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ImageFileName
		{
			get
			{
				return this._ImageFileName;
			}
			set
			{
				if ((this._ImageFileName != value))
				{
					this.OnImageFileNameChanging(value);
					this.SendPropertyChanging();
					this._ImageFileName = value;
					this.SendPropertyChanged("ImageFileName");
					this.OnImageFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int NOT NULL")]
		public int Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnable", DbType="Int NOT NULL")]
		public int IsEnable
		{
			get
			{
				return this._IsEnable;
			}
			set
			{
				if ((this._IsEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._IsEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Pop.TemplateHead")]
	public partial class TemplateHead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Guid;
		
		private string _Name;
		
		private string _ImageFileDir;
		
		private string _ImageFileName;
		
		private int _Seq;
		
		private int _IsEnable;
		
		private string _ParialViewDir;
		
		private string _ParialViewName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageFileDirChanging(string value);
    partial void OnImageFileDirChanged();
    partial void OnImageFileNameChanging(string value);
    partial void OnImageFileNameChanged();
    partial void OnSeqChanging(int value);
    partial void OnSeqChanged();
    partial void OnIsEnableChanging(int value);
    partial void OnIsEnableChanged();
    partial void OnParialViewDirChanging(string value);
    partial void OnParialViewDirChanged();
    partial void OnParialViewNameChanging(string value);
    partial void OnParialViewNameChanged();
    #endregion
		
		public TemplateHead()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFileDir", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ImageFileDir
		{
			get
			{
				return this._ImageFileDir;
			}
			set
			{
				if ((this._ImageFileDir != value))
				{
					this.OnImageFileDirChanging(value);
					this.SendPropertyChanging();
					this._ImageFileDir = value;
					this.SendPropertyChanged("ImageFileDir");
					this.OnImageFileDirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFileName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ImageFileName
		{
			get
			{
				return this._ImageFileName;
			}
			set
			{
				if ((this._ImageFileName != value))
				{
					this.OnImageFileNameChanging(value);
					this.SendPropertyChanging();
					this._ImageFileName = value;
					this.SendPropertyChanged("ImageFileName");
					this.OnImageFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int NOT NULL")]
		public int Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnable", DbType="Int NOT NULL")]
		public int IsEnable
		{
			get
			{
				return this._IsEnable;
			}
			set
			{
				if ((this._IsEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._IsEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParialViewDir", DbType="VarChar(100)")]
		public string ParialViewDir
		{
			get
			{
				return this._ParialViewDir;
			}
			set
			{
				if ((this._ParialViewDir != value))
				{
					this.OnParialViewDirChanging(value);
					this.SendPropertyChanging();
					this._ParialViewDir = value;
					this.SendPropertyChanged("ParialViewDir");
					this.OnParialViewDirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParialViewName", DbType="VarChar(50)")]
		public string ParialViewName
		{
			get
			{
				return this._ParialViewName;
			}
			set
			{
				if ((this._ParialViewName != value))
				{
					this.OnParialViewNameChanging(value);
					this.SendPropertyChanging();
					this._ParialViewName = value;
					this.SendPropertyChanged("ParialViewName");
					this.OnParialViewNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
