@{
    ViewBag.Title = "TemplateConfig";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<link href="~/Content/LigerUI/skins/Aqua/css/ligerui-all.css" rel="stylesheet" />*@
<link href="/Content/pop.css" rel="stylesheet" type="text/css" />
<link href="~/Content/uploadify.css" rel="stylesheet" />
<script src="~/Scripts/jquery.uploadify.min.js"></script>

@*<div id="div_bar" >
    <span>POP类型:</span>：
    <input id="txtPOPType" />
    <input id="btnOK" type="button" value="button" onclick="f_search()" />
</div>*@
<div id="div_bar">
    <div id="div1"><span>版头名称:</span></div>
    <div id="div2">
        <input id="txtName" />
    </div>
    <div id="div3">
        <input id="btnSearch" type="button" value="查询" onclick="f_search()" />
    </div>
    <div id="div4">
        <input type="file" name="btnUpload" id="btnUpload" />
        @* <input id="btnUpload" type="button" value="图样上传" onclick="f_upload()" />*@
    </div>
@*     <div id="div5">
        <input id="btnFlash" type="button" value="刷新图样" onclick="f_flash()" />
    </div>*@
</div>


<div id="mastergrid"></div>
<div id="detailgrid"></div>

<script type="text/javascript">
    var manager_m, g_m, manager_d, g_d;

    //下拉列表配置
    var columns = [
        { header: '模版名称', name: 'Name', width: 200 },
        { header: '模版编号', name: 'POPType', width: 100 },
        //{ header: '描述', name: 'desc', width: 170 },
    ];

    var imageNameData = [];
    var isEnableData = [];
    var fontNameData = [];
    var fontStyleData = [];
    var fontColorData = [];
    var fontAlignmentData = [];

    $(function () {
        f_initDDLData();
        f_initMasterGrid();
        f_initDetailGrid();
        f_initUpload();
    });

    function f_initDDLData() {
        $.ajax({
            type: "GET",
            url: "/Config/GetDDLData?name=" + "isEnable",
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    var json = { name: data[i].FieldText, value: data[i].FieldValue };
                    isEnableData.push(json);
                }
            }
        });

        $.ajax({
            type: "GET",
            url: "/Config/GetDDLData?name=" + "fontName",
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    var json = { name: data[i].FieldText, value: data[i].FieldValue };
                    fontNameData.push(json);
                }
            }
        });

        $.ajax({
            type: "GET",
            url: "/Config/GetDDLData?name=" + "fontStyle",
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    var json = { name: data[i].FieldText, value: data[i].FieldValue };
                    fontStyleData.push(json);
                }
            }
        });

        $.ajax({
            type: "GET",
            url: "/Config/GetDDLData?name=" + "fontColor",
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    var json = { name: data[i].FieldText, value: data[i].FieldValue };
                    fontColorData.push(json);
                }
            }
        });

        $.ajax({
            type: "GET",
            url: "/Config/GetDDLData?name=" + "fontAlignment",
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    var json = { name: data[i].FieldText, value: data[i].FieldValue };
                    fontAlignmentData.push(json);
                }
            }
        });

        $.ajax({
            type: "GET",
            url: "/POP/POPManage/GetTemplateImagePath",
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    var json = { name: data[i].FieldText, value: data[i].FieldValue };
                    imageNameData.push(json);
                }
            }
        });
    };

    //function f_flash() {
    //    imageNameData = [];
    //    $.ajax({
    //        type: "GET",
    //        url: "/POP/POPManage/GetTemplateImagePath",
    //        dataType: "json",
    //        success: function (data) {
    //            for (var i = 0; i < data.length; i++) {
    //                var json = { name: data[i].FieldText, value: data[i].FieldValue };
    //                imageNameData.push(json);
    //            }
    //        }
    //    });
    //}


    function f_initUpload() {
        $('#btnUpload').uploadify({
            uploader: '/POP/POPManage/UploadImage',    // 服务器端处理地址
            swf: '/Content/uploadify/uploadify.swf',    // 上传使用的 Flash

            width: 120,                          // 按钮的宽度
            height: 18,                         // 按钮的高度
            buttonText: "图样上传",                 // 按钮上的文字
            buttonCursor: 'hand',                // 按钮的鼠标图标

            fileObjName: 'Filedata',            // 上传参数名称

            // 两个配套使用
            //fileTypeExts: "*.jpg;*.png",             // 扩展名
            fileTypeExts: "*.jpg;*.png",             // 扩展名
            fileTypeDesc: "请选择 jpg png 文件",     // 文件说明

            auto: true,                // 选择之后，自动开始上传
            multi: true,               // 是否支持同时上传多个文件
            queueSizeLimit: 5,       // 允许多文件上传的时候，同时上传文件的个数
            onUploadComplete: function () {
                $.ajax({
                    type: "GET",
                    url: "/POP/POPManage/GetTemplateImagePath",
                    dataType: "json",
                    success: function (data) {
                        for (var i = 0; i < data.length; i++) {
                            var json = { name: data[i].FieldText, value: data[i].FieldValue };
                            imageNameData.push(json);
                        }
                    }
                });
            }
        });
    }

    function f_initMasterGrid() {
        g_m = manager_m = $("#mastergrid").ligerGrid(
        {
            title: '版头定义管理（注意数据翻页）',
            columns:
                [
                    //{ name: 'Guid', display: '主键', width: 300},
                    { name: 'Name', display: '模板名称', width: 100, frozen: true },
                    { name: 'ImageFileDir', display: '模板路径', width: 150, frozen: true },
                    {
                        name: 'ImageFileName', display: '图片名称', width: 130,
                        editor: { type: 'select', data: imageNameData, valueField: 'value', textField: 'name' },
                    },
                    {
                        name: 'Seq', display: '排序编号', width: 80, type: 'int',
                        editor: { type: 'text' }
                    },
                    {
                        name: 'IsEnable', display: '是否可用', width: 60, type: 'int',
                        editor: { type: 'select', data: isEnableData, valueField: 'value', textField: 'name' },
                        render: function (item) {
                            if (item.IsEnable == 1) return '是';
                            if (item.IsEnable == 0) return '否';
                            return '是';
                        }
                    },

                    {
                        display: '操作', isSort: false, width: 120, render: function (rowdata, rowindex, value) {
                            var h = "";
                            if (!rowdata._editing) {
                                h += "<a href='javascript:masterbeginEdit(" + rowindex + ")'>修改</a> ";
                                h += "<a href='javascript:masterdeleteRow(" + rowindex + ")'>删除</a> ";
                            }
                            else {
                                h += "<a href='javascript:masterendEdit(" + rowindex + ")'>提交</a> ";
                                h += "<a href='javascript:mastercancelEdit(" + rowindex + ")'>取消</a> ";
                            }
                            return h;
                        }
                    }
                ],

            onSelectRow: function (rowdata, rowindex) {
                //alert(rowdata.Guid);
                //var guid = JSON.stringify(rowdata.Guid);
                var guid = JSON.stringify(rowdata.Guid);
                $("#detailgrid").ligerGrid({
                    url: '/POP/POPManage/GetTemplateBodyByGuid?HeadGuid=' + guid,
                });
            },

            enabledEdit: true, clickToEdit: false, isScroll: false,

            //url: '/Admin/admin/GetWaterMarkConfig',
            height: '100%',
            weight: '100%',
            usePager: true,
            pageSize: 5,
            rownumbers: true
        });
    }

    function f_search() {
        var name = $("#txtName").val();
        $("#mastergrid").ligerGrid({
            url: '/POP/POPManage/GetTemplateHead?name=' + name,
        });
    }

    function masterbeginEdit(rowid) {
        manager_m.beginEdit(rowid);
    }

    function mastercancelEdit(rowid) {
        manager_m.cancelEdit(rowid);
    }

    function masterendEdit(rowid) {
        manager_m.endEdit(rowid);

        var row = manager_m.getSelectedRow();
        if (!row) { alert('请选择行'); return; }
        //var JSONstring = JSON.stringify(row);
        $.ajax({
            type: 'post', cache: false, dataType: 'json',
            url: '/POP/POPManage/EditTemplateHead',
            data: row,
            success: function (result) {
                if (result = 't') {
                    alert('update ok！');
                }
                else {
                    alert('调用后台成功，update fail！');
                }
            },
            statusCode: {
                404: function () { alert('cannot  find resource'); },
                505: function () { alert('internal server error'); }
            },
            error: function () {
                alert('调用后台失败！');
            }
        });
    }

    function masterdeleteRow(rowid) {
        if (confirm('确定删除?')) {
            manager_m.deleteRow(rowid);
            alert('页面删除而已，并不操作后台');
        }
    }

    function f_initDetailGrid() {
        g_d = manager_d = $("#detailgrid").ligerGrid(
        {
            title: '版体规格定义表',
            columns:
                [
                    //{ name: 'Guid', display: '主键', width: 300},
                    { name: 'Name', display: '参数名称', width: 80, frozen: true },
                    {
                        name: 'FontName', display: '字体名称', width: 130,
                        editor: { type: 'select', data: fontNameData, valueField: 'value', textField: 'name' },
                    },
                    {
                        name: 'FontSize', display: '字体大小', width: 60, type: 'int',
                        editor: { type: 'text' }
                    },
                    {
                        name: 'FontStyle', display: '字体样式', width: 60,
                        editor: { type: 'select', data: fontStyleData, valueField: 'value', textField: 'name' },
                        render: function (item) {
                            if (item.FontStyle == 'normal') return '常规';
                            if (item.FontStyle == 'bold') return '加粗';
                            return '斜体';
                        }
                    },
                    {
                        name: 'FontColor', display: '字体颜色', width: 60,
                        editor: { type: 'select', data: fontColorData, valueField: 'value', textField: 'name' },
                        render: function (item) {
                            if (item.FontColor == 'red') return '红色';
                            if (item.FontColor == 'black') return '黑色';
                            return '其他';
                        }
                    },
                    {
                        name: 'XPosition', display: 'X轴', width: 60, type: 'int',
                        editor: { type: 'text' }
                    },
                    {
                        name: 'YPosition', display: 'Y轴', width: 60, type: 'int',
                        editor: { type: 'text' }
                    },
                    { name: 'NewFilePath', display: '生成文件路径', width: 200 },
                    { name: 'OldFilePath', display: '原始文件路径', width: 200 },
                    {
                        name: 'FontAlignment', display: '对齐方式', width: 60,
                        editor: { type: 'select', data: fontAlignmentData, valueField: 'value', textField: 'name' },
                        render: function (item) {
                            if (item.FontAlignment == 'left') return '靠左';
                            if (item.FontAlignment == 'right') return '靠右';
                            return '居中';
                        }
                    },
                    {
                        name: 'Seq', display: '排序', width: 40, type: 'int',
                        editor: { type: 'text' }
                    },
                    {
                        display: '操作', isSort: false, width: 120, render: function (rowdata, rowindex, value) {
                            var h = "";
                            if (!rowdata._editing) {
                                h += "<a href='javascript:beginEdit(" + rowindex + ")'>修改</a> ";
                                h += "<a href='javascript:deleteRow(" + rowindex + ")'>删除</a> ";
                            }
                            else {
                                h += "<a href='javascript:endEdit(" + rowindex + ")'>提交</a> ";
                                h += "<a href='javascript:cancelEdit(" + rowindex + ")'>取消</a> ";
                            }
                            return h;
                        }
                    }
                ],
            onSelectRow: function (rowdata, rowindex) {
                $("#txtrowindex").val(rowindex);
            },

            enabledEdit: true, clickToEdit: false, isScroll: false,

            //url: '/Admin/admin/GetWaterMarkConfig',
            height: '100%',
            weight: '100%',
            usePager: false,
            pageSize: 10,
            rownumbers: true
        });
    }

    function beginEdit(rowid) {
        manager_d.beginEdit(rowid);
    }

    function cancelEdit(rowid) {
        manager_d.cancelEdit(rowid);
    }

    function endEdit(rowid) {
        manager_d.endEdit(rowid);

        var row = manager_d.getSelectedRow();
        if (!row) { alert('请选择行'); return; }
        //var JSONstring = JSON.stringify(row);
        $.ajax({
            type: 'post', cache: false, dataType: 'json',
            url: '/POP/POPManage/EditTemplateBody',
            data: row,
            success: function (result) {
                if (result = 't') {
                    alert('update ok！');
                }
                else {
                    alert('调用后台成功，update fail！');
                }
            },
            statusCode: {
                404: function () { alert('cannot  find resource'); },
                505: function () { alert('internal server error'); }
            },
            error: function () {
                alert('调用后台失败！');
            }
        });
    }

    function deleteRow(rowid) {
        if (confirm('确定删除?')) {
            manager_d.deleteRow(rowid);
            alert('页面删除而已，并不操作后台');
        }
    }
</script>
